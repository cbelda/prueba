swagger: "2.0"
info:
  description: "Documentation about openshift API REST."
  version: "1.0.0"
  title: "Openshift API REST"
  termsOfService: "TODO"
  contact:
    email: "jorge.dacal-cantos@capgemini.com"
  license:
    name: "TODO"
    url: "http://www.no-url.uri"
host: "10.0.75.2:8443"
basePath: "/"
tags:
- name: "Login"
  description: "Access to Openshift Cluster"
- name: "Projects"
  description: "Everything about Projects"
  externalDocs:
    description: "Find out more about Projects"
    url: "https://docs.openshift.org/latest/rest_api/apis-project.openshift.io/v1.Project.html"
- name: "Route"
  description: "Everything about Routes"
  externalDocs:
    description: "Find out more about Routes"
    url: "https://docs.openshift.org/latest/rest_api/apis-route.openshift.io/v1.Route.html"
- name: "Secrets"
  description: "Everything about Secrets"
  externalDocs:
    description: "Find out more about Secrets"
    url: "https://docs.openshift.org/latest/rest_api/api/v1.Secret.html"
- name: "New-App"
  description: "Everything about New-App"
- name: "Build"
  description: "Everything about Build"
schemes:
- "http"
- "https"
paths:
# LOGIN
  /oauth/token/request:
    get:
      tags:
      - "Login"
      summary: "Get Bearer Token"
      description: "Obtain the Bearer Token to communicate with the cluster.\n This metod return the bearer token inside the HTML response, it's into the <code></code> tag"
      operationId: "requestToken"
      produces:
      - "html"
      responses:
        200:
          description: "OK\n HTML \n ... \n < code > your bearer token < /code > \n ..."
      security:
      - basicAuth: []
# PROJECT
  /oapi/v1/projects:
    get:
      tags:
      - "Projects"
      summary: "List or watch objects of kind Project"
      description: "obtain a list with the projects of the user"
      operationId: "requestProjects"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      - "application/json;stream=watch"
      - "application/vnd.kubernetes.protobuf;stream=watch"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/projectrequests:
    post:
      tags:
      - "Projects"
      summary: "Create a new Project"
      description: "User create a new Project into the Openshift Cluster"
      operationId: "createProject"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "body"
        name: "project"
        description: "project object that needs to be created into the cluster"
        required: true
        schema:
          $ref: "#/definitions/ProjectRequest"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
# New-APP
  /oapi/v1/namespaces/{NAMESPACE}/templates/{NAME}:
    get:
      tags:
      - "New-App"
      summary: "Read the specified Template"
      description: "STEP 1 of new app. User obtains the specified template to create te new-app"
      operationId: "requestTemplate"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project where the template is. For templates about devonfw is \"openshift"
        required: true
        default: "openshift"
      - in: "path"
        name: "NAME"
        type: string
        description: "The name of the template"
        default: "builder"
        required: true
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/namespaces/{NAMESPACE}/processedtemplates:
    post:
      tags:
      - "New-App"
      summary: "return the processed template"
      description: "STEP 2 of new app. User request about a processed template. You need to send a modify of the template obtained in the step 1. You must delete the \"metadata\" section and replace the value of each param read in param-file inside the \"parameters\" section. When finihs, you obtain the processed templated and must invoke an API operation for each object inside the \"objects\" sections. This calls operations are the Steps 3.x" 
      operationId: "processedTemplate"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "body"
        name: "template"
        description: "the template of the STEP 1 modify with the params in the param-file, see the param-file definition"
        required: true
        schema:
          $ref: "#/definitions/TemplateForProcessed"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/namespaces/{NAMESPACE}/buildconfigs:
    post:
      tags:
      - "New-App"
      summary: "Create a Buildconfig"
      description: "STEP 3.1 of new app. User send the Buildconfig obtained in the processed template of the STEP 2." 
      operationId: "createBuildConfig"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "body"
        name: "buildconfig"
        description: "the Buildconfig object inside the \"objects\" in the processedtemplate returned by the STEP 2. NO MODIFY"
        required: true
        schema:
          $ref: "#/definitions/BuildConfig"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/namespaces/{NAMESPACE}/imagestreams:
    post:
      tags:
      - "New-App"
      summary: "Create a Imagestream"
      description: "STEP 3.2 of new app. User send the Imagestream config obtained in the processed template of the STEP 2." 
      operationId: "createImageStream"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "body"
        name: "Imagestream"
        description: "the Imagestream object inside the \"objects\" in the processedtemplate returned by the STEP 2. NO MODIFY"
        required: true
        schema:
          $ref: "#/definitions/Imagestream"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/namespaces/{NAMESPACE}/deploymentconfigs:
    post:
      tags:
      - "New-App"
      summary: "Create a Deploymentconfig"
      description: "STEP 3.3 of new app. User send the Deploymentconfig obtained in the processed template of the STEP 2." 
      operationId: "createDeploymentConfig"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "body"
        name: "Deploymentconfig"
        description: "the Deploymentconfig object inside the \"objects\" in the processedtemplate returned by the STEP 2. NO MODIFY"
        required: true
        schema:
          $ref: "#/definitions/DeploymentConfig"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/namespaces/{NAMESPACE}/routes:
    post:
      tags:
      - "New-App"
      - "Route"
      summary: "Create a Route"
      description: "STEP 3.4 of new app. User send the Route config obtained in the processed template of the STEP 2." 
      operationId: "createRoute"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "body"
        name: "Route"
        description: "the Route object inside the \"objects\" in the processedtemplate returned by the STEP 2. NO MODIFY"
        required: true
        schema:
          $ref: "#/definitions/Route"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
    get:
      tags:
      - "Route"
      summary: "List or watch objects of kind Project"
      description: ""
      operationId: "requestAllRoutes"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/namespaces/{NAMESPACE}/routes/{NAME}:
    get:
      tags:
      - "Route"
      summary: "Read the specified Route"
      description: ""
      operationId: "requestRoute"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "path"
        name: "NAME"
        type: string
        description: "The name of the route"
        required: true
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/namespaces/{NAMESPACE}/services:
    post:
      tags:
      - "New-App"
      summary: "Create a Service"
      description: "STEP 3.5 of new app. User send the Service config obtained in the processed template of the STEP 2." 
      operationId: "createService"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "body"
        name: "Service"
        description: "the Service object inside the \"objects\" in the processedtemplate returned by the STEP 2. NO MODIFY"
        required: true
        schema:
          $ref: "#/definitions/Service"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
# SECRETS
  /api/v1/namespaces/{NAMESPACE}/secrets:
    post:
      tags:
      - "Secrets"
      - "New-App"
      summary: "Create a new Secret in namespace"
      description: "STEP 4.1 of new app. User create a new Secret into the specific namespace"
      operationId: "createSecret"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "body"
        name: "secret"
        description: "secret object that needs to be created into the namespace"
        required: true
        schema:
          $ref: "#/definitions/Secret"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /api/v1/namespaces/{NAMESPACE}/serviceaccounts/{NAME}:
    patch:
      tags:
      - "Secrets"
      - "New-App"
      summary: "add a Secret into Builder Service Account"
      description: "STEP 4.2 of new app. User mark the secret to can be used by the OpenShift project builder service account run"
      operationId: "addSecretToBuilderSA"
      consumes:
      - "application/json-patch+json"
      - "application/merge-patch+json"
      - "application/strategic-merge-patch+json"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "path"
        name: "NAME"
        type: string
        description: "The name of the service account, in this case must be builder"
        default: "builder"
        required: true
      - in: "body"
        name: "namesecret"
        description: "this must be Content-Type application/json-patch+json and have the information about where must add the name of the secret into the service account. \n example: [ { \"op\": \"add\", \"path\": \"/secrets/-\", \"value\": { \"name\": \"namesecret\" } } ]"
        required: true
        schema:
          $ref: "#/definitions/SecretToBuilderSA"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
  /oapi/v1/namespaces/{NAMESPACE}/buildconfigs/{NAME}:
    patch:
      tags:
      - "Secrets"
      - "New-App"
      summary: "Set build-secret to app"
      description: "STEP 4.3 of new app. User add the name of the repository secret into the buildconfig of the app"
      operationId: "addSecretToBuildconfig"
      consumes:
      - "application/json-patch+json"
      - "application/merge-patch+json"
      - "application/strategic-merge-patch+json"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "path"
        name: "NAME"
        type: string
        description: "The name of the buildconfig. It should be the name of the app."
        default: "builder"
        required: true
      - in: "body"
        name: "namesecret"
        description: "this must be Content-Type application/json-patch+json and have the information about where must add the name of the secret into the buildconfig. \n example: [ { \"op\": \"add\", \"path\": \"/spec/source/sourceSecret\", \"value\": { \"name\": \"namesecret\" } } ]"
        required: true
        schema:
          $ref: "#/definitions/SecretToBuildconfig"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
#BUILD
  /oapi/v1/namespaces/{NAMESPACE}/buildconfigs/{NAME}/instantiate:
    post:
      tags:
      - "Build"
      - "New-App"
      summary: "Create instantiate of a BuildRequest"
      description: "User instantiate a new build of an app, based on the BuildConfig info"
      operationId: "buildApp"
      produces:
      - "application/json"
      - "application/yaml"
      - "application/vnd.kubernetes.protobuf"
      parameters:
      - in: "path"
        name: "NAMESPACE"
        type: string
        description: "The namespace of the project"
        required: true
      - in: "path"
        name: "NAME"
        type: string
        description: "The name of the app to build"
        required: true
      - in: "body"
        name: "BuildRequest"
        description: "the BuildRequest object that needs to be build into the namespace"
        required: true
        schema:
          $ref: "#/definitions/BuildRequest"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        400:
          description: "BadRequest"
        401:
          description: "Unauthorized"
      security:
      - bearerAuth: []
#Security Definitions
securityDefinitions:
  basicAuth:
    type: basic
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
#Definitions
definitions:
  ProjectRequest:
    type: "object"
    properties:
      displayName:
        type: "string"
      description:
        type: "string"
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> ProjectRequest"
        default: "ProjectRequest"
      metadata:
        type: "object"
        properties:
          name:
            type: "string"
          namespace:
            type: "string"
  Secret:
    type: "object"
    properties:
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> Secret"
        default: "Secret"
      metadata:
        type: "object"
        properties:
          name:
            type: "string"
      type:
        type: "string"
        description: "Type of secret, the value is for ssh is -> kubernetes.io/ssh-auth"
        default: "kubernetes.io/ssh-auth"
      data:
        type: "object"
        properties:
          ssh-privatekey:
            type: "string"
            description: "the key in base64"
  SecretToBuilderSA:
    type: "array"
    items:
      type: "object"
      properties:
        op:
          type: "string"
          description: "it's the operation and in this case is add"
          default: "add"
          enum:
          - "add"
          - "replace"
          - "remove"
        path:
          type: "string"
          description: "it's the path where the secret is add. In this case is /secrets/-"
          default: "/secrets/-"
        value:
          type: "object"
          properties:
            name:
              type: "string"
              description: "it's the name of the secret."
  SecretToBuildconfig:
    type: "array"
    items:
      type: "object"
      properties:
        op:
          type: "string"
          description: "it's the operation and in this case is add"
          default: "add"
          enum:
          - "add"
          - "replace"
          - "remove"
        path:
          type: "string"
          description: "it's the path where the namesecret is add. In this case is /spec/source/sourceSecret"
          default: "/spec/source/sourceSecret"
        value:
          type: "object"
          properties:
            name:
              type: "string"
              description: "it's the name of the secret."
  param-file:
    type: "object"
    properties:
      param1:
        type: "string"
        description: "its a \"key=value\" to config the value of that key inside the templated"
        default: "key=value"
      param2:
        type: "string"
        description: "its a \"key=value\" to config the value of that key inside the templated"
        default: "key=value"
      ...:
        type: "string"
        description: "its a \"key=value\" to config the value of that key inside the templated"
        default: "key=value"
  TemplateForProcessed:
    type: "object"
    properties:
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> Template. It must be the Same as obtained in STEP 1."
        default: "Template"
      apiVersion:
        type: "string"
        description: "it's the version of the api. It must be the Same as obtained in STEP 1."
      objects:
        type: "object"
        properties:
          object1:
            type: "object"
            description: "it's an object to config the new-app. It must be the Same as obtained in STEP 1."
          object2:
            type: "object"
            description: "it's an object to config the new-app. It must be the Same as obtained in STEP 1."
          ...:
            type: "object"
            description: "it's an object to config the new-app. It must be the Same as obtained in STEP 1."
      parameters:
        type: "object"
        properties:
          param1:
            type: "object"
            description: "it's a parameter to config the new-app. The value must be MODIFY with the value on the file-param."
          param2:
            type: "object"
            description: "it's a parameter to config the new-app. The value must be MODIFY with the value on the file-param."
          ...:
            type: "object"
            description: "it's a parameter to config the new-app. The value must be MODIFY with the value on the file-param."
      labels:
        type: "object"
        description: "it's the labels to config the new-app. It must be the Same as obtained in STEP 1."
  BuildConfig:
    type: "object"
    properties:
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> Buildconfig. It must be the Same as obtained in STEP 2."
        default: "Buildconfig"
      apiVersion:
        type: "string"
        description: "it's the version of the api. It must be the Same as obtained in STEP 2."
      metadata:
        type: "object"
        description: "it's the metadata of the Buildconfig. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/oapi/v1.BuildConfig.html"
      spec:
        type: "object"
        description: "it's the spec of the Buildconfig. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/oapi/v1.BuildConfig.html"
  Imagestream:
    type: "object"
    properties:
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> Imagestream. It must be the Same as obtained in STEP 2."
        default: "Imagestream"
      apiVersion:
        type: "string"
        description: "it's the version of the api. It must be the Same as obtained in STEP 2."
      metadata:
        type: "object"
        description: "it's the metadata of the Imagestream. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/oapi/v1.ImageStream.html"
      spec:
        type: "object"
        description: "it's the spec of the Imagestream. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/oapi/v1.ImageStream.html"
  DeploymentConfig:
    type: "object"
    properties:
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> DeploymentConfig. It must be the Same as obtained in STEP 2."
        default: "DeploymentConfig"
      apiVersion:
        type: "string"
        description: "it's the version of the api. It must be the Same as obtained in STEP 2."
      metadata:
        type: "object"
        description: "it's the metadata of the DeploymentConfig. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/oapi/v1.DeploymentConfig.html"
      spec:
        type: "object"
        description: "it's the spec of the DeploymentConfig. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/oapi/v1.DeploymentConfig.html"
  Route:
    type: "object"
    properties:
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> Route. It must be the Same as obtained in STEP 2."
        default: "Route"
      apiVersion:
        type: "string"
        description: "it's the version of the api. It must be the Same as obtained in STEP 2."
      metadata:
        type: "object"
        description: "it's the metadata of the Route. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/oapi/v1.Route.html"
      spec:
        type: "object"
        description: "it's the spec of the Route. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/oapi/v1.Route.html"
  Service:
    type: "object"
    properties:
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> Service. It must be the Same as obtained in STEP 2."
        default: "Service"
      apiVersion:
        type: "string"
        description: "it's the version of the api. It must be the Same as obtained in STEP 2."
      metadata:
        type: "object"
        description: "it's the metadata of the Service. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/api/v1.Service.html"
      spec:
        type: "object"
        description: "it's the spec of the Service. It must be the Same as obtained in STEP 2. More information: https://docs.openshift.org/latest/rest_api/api/v1.Service.html"
  BuildRequest:
    type: "object"
    properties:
      kind:
        type: "string"
        description: "kind of schema for Openshift API, the value is the name of the object -> BuildRequest."
        default: "BuildRequest"
      metadata:
        type: "object"
        properties:
          name:
            type: "string"
            description: "the name of the app"
#External Docs
externalDocs:
  description: "Find out more about Openshift Origin API REST"
  url: "https://docs.openshift.org/latest/rest_api/examples.html"